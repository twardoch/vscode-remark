{
    "name": "vscode-remark",
    "displayName": "Remark",
    "description": "Beautify markdown code with Remark",
    "version": "1.3.0",
    "publisher": "mrmlnc",
    "license": "MIT",
    "engines": {
        "vscode": "^1.30.0"
    },
    "icon": "icon.png",
    "homepage": "https://github.com/mrmlnc/vscode-remark/blob/master/README.md",
    "repository": {
        "type": "git",
        "url": "https://github.com/mrmlnc/vscode-remark"
    },
    "keywords": [
        "markdown",
        "remark",
        "format",
        "beautify",
        "beautifier"
    ],
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onCommand:remark.reformat",
        "onLanguage:markdown"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "remark.reformat",
                "title": "Remark: Beautify markdown code"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Remark format configuration options",
            "properties": {
                "remark.format": {
                    "type": "object",
                    "default": {},
                    "properties": {
                        "plugins": {
                            "type": "array",
                            "default": [],
                            "description": "A list globally or locally installed plugins that will be used with Remark (without `remark-` prefix).",
                            "items": {
                                "type": "string",
                                "description": "The full name of plugin without `remark-` prefix."
                            }
                        },
                        "rules": {
                            "type": "object",
                            "default": {},
                            "description": "Remark formatter rules.",
                            "properties": {
                                "default": {},
                                "description": "Remark formatter rules.",
                                "type": "object",
                                "properties": {
                                    "bullet": {
                                        "default": "-",
                                        "description": "List item bullet",
                                        "enum": [
                                            "-",
                                            "*"
                                        ],
                                        "type": "string"
                                    },
                                    "closeAtx": {
                                        "default": false,
                                        "description": "Compile ATX headings with the same amount of closing hashes as opening hashes.",
                                        "type": "boolean"
                                    },
                                    "commonmark": {
                                        "default": false,
                                        "description": "Compile adjacent blockquotes separately and escape more characters using slashes, instead of as entities.",
                                        "type": "boolean"
                                    },
                                    "emphasis": {
                                        "default": "_",
                                        "description": "Marker to use for emphasis.",
                                        "enum": [
                                            "_",
                                            "*"
                                        ],
                                        "type": "string"
                                    },
                                    "entities": {
                                        "default": false,
                                        "description": "See values description.",
                                        "oneOf": [
                                            {
                                                "description": "Entities are generated for special HTML characters (& > &amp;) and non-ASCII characters (© > &copy;). If named entities are not (widely) supported, numbered character references are used (’ > &#x2019;).",
                                                "enum": [
                                                    true,
                                                    false
                                                ],
                                                "type": "boolean"
                                            },
                                            {
                                                "description": "Numbered entities are generated (& > &#x26;) for special HTML characters and non-ASCII characters.",
                                                "enum": [
                                                    "numbers"
                                                ],
                                                "type": "string"
                                            },
                                            {
                                                "description": "Special HTML characters are encoded (& > &amp;, ’ > &#x2019;), non-ASCII characters not (ö persists).",
                                                "enum": [
                                                    "escape"
                                                ],
                                                "type": "string"
                                            }
                                        ],
                                        "type": [
                                            "boolean",
                                            "string"
                                        ]
                                    },
                                    "fence": {
                                        "default": "`",
                                        "description": "Fence marker to use for code blocks.",
                                        "enum": [
                                            "~",
                                            "`"
                                        ],
                                        "type": "string"
                                    },
                                    "fences": {
                                        "default": true,
                                        "description": "Stringify code blocks without language with fences.",
                                        "type": "boolean"
                                    },
                                    "footnotes": {
                                        "default": false,
                                        "description": "Footnotes",
                                        "type": "boolean"
                                    },
                                    "gfm": {
                                        "default": false,
                                        "description": "Escape pipes (|, for tables), colons (:, for literal URLs), tildes (~, for strike-through).",
                                        "type": "boolean"
                                    },
                                    "incrementListMarker": {
                                        "default": true,
                                        "description": "Whether to increment ordered list item bullets.",
                                        "type": "boolean"
                                    },
                                    "listItemIndent ": {
                                        "default": "1",
                                        "description": "How to indent the content from list items.",
                                        "oneOf": [
                                            {
                                                "description": "Use tab stops (4 spaces).",
                                                "enum": [
                                                    "tab"
                                                ],
                                                "type": "string"
                                            },
                                            {
                                                "description": "Use one space.",
                                                "enum": [
                                                    "1"
                                                ],
                                                "type": "string"
                                            },
                                            {
                                                "description": "use one space for tight and tab for loose list items.",
                                                "enum": [
                                                    "mixed"
                                                ],
                                                "type": "string"
                                            }
                                        ],
                                        "type": "string"
                                    },
                                    "looseTable": {
                                        "default": false,
                                        "description": "Create tables without fences (initial and final pipes).",
                                        "type": "boolean"
                                    },
                                    "paddedTable": {
                                        "default": true,
                                        "description": "Padded table.",
                                        "type": "boolean"
                                    },
                                    "pedantic": {
                                        "default": false,
                                        "description": "Escape underscores in words.",
                                        "type": "boolean"
                                    },
                                    "rule": {
                                        "default": "-",
                                        "description": "Marker to use for thematic breaks (horizontal rules).",
                                        "enum": [
                                            "-",
                                            "*",
                                            "_"
                                        ],
                                        "type": "string"
                                    },
                                    "ruleRepetition ": {
                                        "default": 3,
                                        "description": "Number of markers to use for thematic breaks (horizontal rules). Should be 3 or more.",
                                        "minimum": 3,
                                        "type": "number"
                                    },
                                    "ruleSpaces": {
                                        "default": true,
                                        "description": "Whether to pad thematic break (horizontal rule) markers with spaces.",
                                        "type": "boolean"
                                    },
                                    "setext": {
                                        "default": false,
                                        "description": "Compile headings, when possible, in Setext-style: using = for level one headings and - for level two headings. Other heading levels are compiled as ATX (respecting closeAtx).",
                                        "type": "boolean"
                                    },
                                    "spacedTable": {
                                        "default": true,
                                        "description": "Create tables without spacing between pipes and content.",
                                        "type": "boolean"
                                    },
                                    "strong": {
                                        "default": "*",
                                        "description": "Marker to use for importance.",
                                        "enum": [
                                            "_",
                                            "*"
                                        ],
                                        "type": "string"
                                    },
                                    "yaml": {
                                        "default": true,
                                        "description": "Use YAML frontmatter.",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "devDependencies": {
        "@types/node": "^8.10.59",
        "rimraf": "^3.0.0",
        "tslint": "^5.20.1",
        "tslint-config-xo": "^2.0.0",
        "typescript": "^3.7.4",
        "vscode": "^1.1.36"
    },
    "dependencies": {
        "npm-module-path": "^2.0.2",
        "remark": "^11.0.2",
        "remark-lint-checkbox-character-style": "^1.0.3",
        "yaml": "^1.8.2"
    },
    "scripts": {
        "postinstall": "node ./node_modules/vscode/bin/install",
        "clean": "rimraf out",
        "lint": "tslint src/**/*.ts --project ./tsconfig.json --format stylish",
        "compile": "tsc",
        "build": "npm run clean && npm run lint && npm run compile",
        "watch": "npm run clean && npm run lint && npm run compile -- --sourceMap --watch"
    }
}
